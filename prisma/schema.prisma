generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  role          ROLE      @default(USER)
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  reviews   Review[]
  favorites Product[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name        String
  slug        String
  description String
  price       String
  images      String[]

  User       User?     @relation(fields: [userId], references: [id])
  userId     String?

  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?
  
  Review     Review[]
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  name String @unique
  slug String @unique

  products Product[]
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  rating Int
  text   String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  product   Product @relation(fields: [productId], references: [id])
  productId String
}

enum ROLE {
  ADMIN
  USER
}
